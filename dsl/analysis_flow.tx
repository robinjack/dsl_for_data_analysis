Program :
    statement *= Statement
    "end"
    ;

Comment:
  /\/\/.*$/
;

Statement : Data  | Analysis | Manipulation | Train | Test | Score | Assignment | FunctionCall | Expression ;

Data : "LOAD" name=ID fp=STRING;
Analysis: "ANALYSIS" data=[Data] functionName=AnalysisFunction (args*=KeywordParameter[","])?;
Manipulation :
    "MANIPULATION" query=DataSQL;

DataSQL :
    "SELECT" maps+=ID[","]
    "FROM"  data=[Data]
    ("WHERE" filter+=Expression)?;

Train: "TRAIN" data=[Data]  (parameters+=KeywordParameter[","])*;

Test: "TEST" data=[Data]  (parameters+=KeywordParameter[","])*;

Score: "SCORE" data=[Data] (parameters+=KeywordParameter[","])*;

AnalysisFunction:
    "print" | "mean" | "sum" | "count" | "percentile";

KeywordParameter:
    param=ID "=" value=Parameter;


// TODO: Will keep the below for now, but it might be worth
// looking into using eval() rather than specifying a limited grammar

Assignment : (key=ID) "=" (value=Expression | value=ID);

Expression:
    ArithmeticExpression| FunctionCall | STRING |  Data | ("(" ArithmeticExpression ")");

ArithmeticExpression : Sum ;

Sum: op=Product (operator=SumOperator op=Product)*;

Product : op=Value (operator=ProductOperator op=Value)*;

Value: op=INT  |  ("(" Sum ")");


SumOperator:
    "-" | "+";

ProductOperator:  "*" | "/" | "^" ;


FunctionCall: functionName=Function "(" exp+=Parameter[","] ")";

Parameter:
    value=ID | value=STRING | value = INT | value=FLOAT;

Function:
    "print" | "log" | "mean" | "sum" | "percentile" | "count" |
    "show" | "target" | "results"
    ;

